// 1. Есть словарь с видами чая и их стоимостью. Есть очередь людей, которые хотят заказать чай 
// (можно представить её в виде массива видов чая, которые хотят заказать).
// Необходимо последовательно выводить в консоль сколько заплатит покупатель 
// (необходимо вывести его номер по порядку, чай, который он заказал, и стоимость)

let teaСost: [String: Int] = [
    "черный чай": 40,
    "зеленый чай": 50,
    "красный чай": 80,
    "чай с молоком": 55
]

let orderQueue: [String] = ["черный чай", "зеленый чай", "красный чай", "чай с молоком"]

var totalСost = 0

for (id, order) in orderQueue.enumerated() {
    if let price = teaСost[order] {
        totalСost += price
        print("Покупатель \(id + 1): заказал \(order), по стоимости \(price) рублей")
    } else {
        print("Покупатель \(id + 1): заказал неизвестный чай '\(order)'")
    }
}

// Вывод общей стоимости заказов
print("Общая стоимость заказов: \(totalСost) рублей")

// 2. Есть массив [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]. 
// Необходимо создать новый массив, который будет состоять из элементов старого, 
// но не должно быть nil, не должно быть 0 и 4, а также массив должен быть отсортирован по возрастанию 

let inputArray: [Int?] = [-4, 5, 10, nil, 4, nil, 25, 0, nil, 16, 75, -20, -7, 15, 0, nil]

let filteredArray = inputArray.compactMap {$0}.filter {$0 != 0 && $0 != 4}

let sortedArray = filteredArray.sorted()

print(sortedArray)

// 3. Написать функцию, которая на вход принимает целое число, а возвращает массив, 
// который сформирован по следующим правилам: количество элементов соответствует переданному числу, 
// массив начинается с 1, каждый последующий элемент больше предыдущего в 2 раза

func generateArray(_ count: Int) -> [Int] {
    var resultArray = [Int]()
    var currentElement = 1
    
    for _ in 1...count {
        resultArray.append(currentElement)
        currentElement *= 2
    }
    
    return resultArray
}

print(generateArray(5))

